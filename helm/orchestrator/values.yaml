# Default values for orchestrator.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

orchestrator:
  image: orchestrator:latest
  environment: minikube

mongodb:
  useStatefulSet: true
  auth:
    rootPassword: "rootpassword"
    username: "orchestrator"
    password: "orchestrator"
    database: "jobs"

brigade: 
  ## These values are for the Generic Gateway.
  ## Enabling this will start a service that handles webhooks from external clients.
  ## To call this endpoint you need a special secret value that is configured once per project.
  genericGateway:
    enabled: true
    registry: brigadecore
    name: brigade-generic-gateway
    tag: c362803
    service:
      name: brigade-generic-service
      type: LoadBalancer  # Change to LoadBalancer if you want this externally available.
      externalPort: 8081
      internalPort: 8000
      annotations: {}
    serviceAccount:
      create: true
      name:
      imagePullSecrets: []
    ingress:
      enabled: false
  
  kashti:
    enabled: true
    service:
      type: LoadBalancer

brigade-project:
  ## Name of the project, in the form "user/project"                        
  project: "coeus/coeus-detector"                               
                                                                              
  ## Domain/Org/Project                                                        
  repository: "knowship.io"                          
                                                
  ## The definitive clone URL. This can be any Git-supported URL format.
  ## You may set this to "" for no clone URL.                                     
  cloneURL: ""                        
                                                                          
  ## OPTIONAL: initGitSubmodules will recursively initialize all submodules in the repository. Default: false
  # initGitSubmodules: "false"
                                    
  ## OPTIONAL: defaultScript is the brigade.js used by default when your VCS repo misses a brigade.js
  ## in it.        
  defaultScript: |   
    const { events, Job } = require("brigadier");

    events.on("simpleevent", (e, p) => { 
      var detect = new Job("detect", "coeus-engine:latest")
      
      detect.tasks = [
        "export URL=orchestrator:3000/api/jobs/$JOB_ID/status",
        "curl --request PATCH $URL --header 'Content-Type: application/json' --data-raw '{\"status\":\"STARTED\"}' | jq .",
        "export STATUS_URL=orchestrator:3000/api/jobs/$JOB_ID/brigade",
        "curl --request PATCH $STATUS_URL --header 'Content-Type: application/json' --data-raw '{\"buildId\":\"'$BUILD_ID'\"}' | jq .",
        "/usr/src/entrypoint.sh",
        "export STATUS_URL=orchestrator:3000/api/jobs/$JOB_ID/status",
        "curl --request PATCH $STATUS_URL --header 'Content-Type: application/json' --data-raw '{\"status\":\"DONE\"}' | jq ."
      ]

      detect.env = {
        "JOB_ID": JSON.parse(e.payload).jobId,
        "VIDEO_URL": JSON.parse(e.payload).videoUrl,
        "BUILD_ID": e.buildID,
        "AWS_ACCESS_KEY_ID": p.secrets.awsAccessKeyId,
        "AWS_SECRET_ACCESS_KEY": p.secrets.awsSecretAccessKey
      }

      detect.run()
    });

    events.on("after", () => {
      console.log(" **** AFTER EVENT called")
    })
                                                               
                        
  ## OPTIONAL: defaultScriptName is the name of a configmap used as a fallback brigade.js.
  # defaultScriptName: default-script-cm                                                
                            
  ## OPTIONAL: defaultConfig is the brigade.json config used by default when your VCS repo has none
  # defaultConfig: |                                                    
  #   {                                                                       
  #     "dependencies": {
  #         "@brigadecore/brigade-utils": "0.3.0"
  #     }               
  #   }                                                                   
                                                                                          
  ## OPTIONAL: defaultConfigName is the name of a configmap used as a fallback brigade.js.
  # defaultConfigName: default-config-cm
                                                          
  ## OPTIONAL: genericGatewaySecret is the secret that should be used on subsequent calls to the Generic Gateway in order to raise a "webhook" event for this Project
  ## This is REQUIRED for the Generic Gateway, but optional otherwise.
  genericGatewaySecret: "genericsecret"
  
  ## OPTIONAL: Items in the 'secrets' array can be mounted as environment variables by
  ## the brigade.js
  ##
  ## Example:
  ##
  ## In JS, do this:
  ##
  ##   events.push = function(e, p) {
  ##     j = new Job("example")
  ##     j.env= {"MY_ENV_VAR": p.secrets.myVar}
  ##   }
  ##
  ## And here, add this:
  ##
  ##   secrets:
  ##     myVar: "super awesome"
  ##
  ## Inside of the job's pod, $MY_ENV_VAR = "super awesome"
  # secrets:
  #   ## Example:
  #   hello: world

  ## OPTIONAL: vcsSidecar is the image that fetches a repo from a VCS
  ## The default sidecar uses Git to fetch a copy of the project.
  ##
  ## If this is not supplied, `brigadecore/git-sidecar:VERSION` will be used, where VERSION
  ## is the version of this chart.
  ##
  ## If this is set to NONE, no sidecar is used.  This may improve performance
  ## very slightly, but will break some gateways or cause the default script to
  ## be used.
  vcsSidecar: "NONE"

  ## Allow Jobs to run in privileged mode. This will allow features like
  ## Docker-in-Docker. This must be set to true before turning allowHostMounts
  ## on.
  allowPrivilegedJobs: "true"
